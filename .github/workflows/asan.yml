name: asan

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: RelWithDebInfo
  TARGET_ARCH: linux64
  ASAN_OPTIONS: verbosity=1
  TSAN_OPTIONS: verbosity=1

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        systemc: [ 2.3.3 ]
        sanitizer: [ address, thread, undefined ]

    name: ${{matrix.sanitizer}} sanitizer

    env:
      SYSTEMC_HOME: ${{github.workspace}}/systemc/${{matrix.systemc}}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Setup Dependencies
      run: |
        sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
        sudo apt-get update -y -qq
        sudo apt-get install libelf-dev libsdl2-dev libvncserver-dev libslirp-dev

    - name: Cache SystemC
      id: cache-systemc
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/systemc
        key: cache-systemc-asan-${{matrix.systemc}}-${{runner.os}}-v2

    - name: Download SystemC
      if: steps.cache-systemc.outputs.cache-hit != 'true'
      run: ./utils/setup-systemc -p ${{github.workspace}} -v ${{matrix.systemc}}

    - name: Configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DVCML_BUILD_TESTS=ON
      env:
        CXXFLAGS: -fsanitize=${{matrix.sanitizer}} -fno-omit-frame-pointer -fno-var-tracking
        LDFLAGS: -fsanitize=${{matrix.sanitizer}} -fno-omit-frame-pointer -fno-var-tracking

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j $(nproc)

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --verbose

